CREATE TABLE movie (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT,
    poster VARCHAR(255),
    age_rating VARCHAR(10),
    dimension VARCHAR(50),
    length INT,  -- Length in minutes
    rating_score DECIMAL(3, 2),  -- Example: 8.75
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE movie_status (
    id INT AUTO_INCREMENT PRIMARY KEY,
    movie_id INT,
    status ENUM('now showing','next picture', 'coming soon', 'upcoming movies', 'stashed'),
    FOREIGN KEY (movie_id) REFERENCES movie(id)
);

CREATE TABLE customer (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_type VARCHAR(50),
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    email VARCHAR(255) UNIQUE,
    phone_number VARCHAR(20),
    customer_password VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE cinema (
    id INT AUTO_INCREMENT PRIMARY KEY,
    time_start TIME,
    time_end TIME,
    number INT,
    movie_id INT,
    FOREIGN KEY (movie_id) REFERENCES movie(id)
);

CREATE TABLE ticket (
    id INT AUTO_INCREMENT PRIMARY KEY,
    cost DECIMAL(10, 2),
    discount_percent DECIMAL(5, 2),
    total_discount DECIMAL(10, 2),
    cinema_id INT,
    customer_id INT,
    FOREIGN KEY (cinema_id) REFERENCES cinema(id),
    FOREIGN KEY (customer_id) REFERENCES customer(id)
);

CREATE TABLE reservation (
    id INT AUTO_INCREMENT PRIMARY KEY,
    quantity INT,
    total_cost DECIMAL(10, 2),
    seats_chosen VARCHAR(255),
    time_selected TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    date_reserved DATE,
    reference_id VARCHAR(255),
    customer_id INT,
    cinema_id INT,
    FOREIGN KEY (customer_id) REFERENCES customer(id),
    FOREIGN KEY (cinema_id) REFERENCES cinema(id)
);

CREATE TABLE payment (
    id INT AUTO_INCREMENT PRIMARY KEY,
    method VARCHAR(50),
    status VARCHAR(50),
    paid_time TIMESTAMP,
    reservation_id INT,
    FOREIGN KEY (reservation_id) REFERENCES reservation(id)
);

CREATE TABLE seats (
    id INT AUTO_INCREMENT PRIMARY KEY,
    capacity INT,
    booked INT,
    available INT,
    cinema_id INT,
    FOREIGN KEY (cinema_id) REFERENCES cinema(id)
);


try {
            // Setting up the time
            $timeStart = '12:30';
            $screenNumber = $_POST['number'];
            $movieID = $_POST['movie-id'];
            $length = $_POST['length'] ?? null;
            $rest = 45;

            $timeEnd1st = calculateEndTime($timeStart, $length);

            $queryTime = "INSERT INTO cinema (time_start, time_end, number, movie_id) VALUES (:time_started, :time_ended, :number, :movie_id);";
            $timestmt1 = $dbhconnect->connection()->prepare($queryTime);
            $timestmt1->bindParam(":time_started", $timeStart, PDO::PARAM_STR);
            $timestmt1->bindParam(":time_ended", $timeEnd1st, PDO::PARAM_STR);
            $timestmt1->bindParam(":number", $screenNumber, PDO::PARAM_INT);
            $timestmt1->bindParam(":movie_id", $movieID, PDO::PARAM_INT);

            if (!$timestmt1->execute()) {
                throw new Exception("Failed to insert movie data");
            }

            $timeStart2nd = $timeEnd1st;
            $timeStart2nd = calculateEndTime($timeStart2nd, $rest);
            $timeEnd2nd = calculateEndTime($timeStart2nd, $length);

            $queryTime = "INSERT INTO cinema (time_start, time_end, number, movie_id) VALUES (:time_started, :time_ended, :number, :movie_id);";
            $timestmt2 = $dbhconnect->connection()->prepare($queryTime);
            $timestmt2->bindParam(":time_started", $timeStart2nd, PDO::PARAM_STR);
            $timestmt2->bindParam(":time_ended", $timeEnd2nd, PDO::PARAM_STR);
            $timestmt2->bindParam(":number", $screenNumber, PDO::PARAM_INT);
            $timestmt2->bindParam(":movie_id", $movieID, PDO::PARAM_INT);

            if (!$timestmt2->execute()) {
                throw new Exception("Failed to insert movie data");
            }

            $timeStart3rd = $timeEnd2nd;
            $timeStart3rd = calculateEndTime($timeStart3rd, $rest);
            $timeEnd3rd = calculateEndTime($timeStart3rd, $length);

            $queryTime = "INSERT INTO cinema (time_start, time_end, number, movie_id) VALUES (:time_started, :time_ended, :number, :movie_id);";
            $timestmt3 = $dbhconnect->connection()->prepare($queryTime);
            $timestmt3->bindParam(":time_started", $timeStart3rd, PDO::PARAM_STR);
            $timestmt3->bindParam(":time_ended", $timeEnd3rd, PDO::PARAM_STR);
            $timestmt3->bindParam(":number", $screenNumber, PDO::PARAM_INT);
            $timestmt3->bindParam(":movie_id", $movieID, PDO::PARAM_INT);

            if (!$timestmt3->execute()) {
                throw new Exception("Failed to insert movie data");
            }
            else {
              header('Location: cinema_assignment.php');
            }

        } catch (\Throwable $th) {
            die("Query Failed. " . $th->getMessage());
        }